name: Django CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      CI: 'true'
      SECRET_KEY: 'ci-test-key-not-for-production'
      DEBUG: 'False'
      ALLOWED_HOSTS: 'localhost,127.0.0.1'
      FRONTEND_URL: 'https://localhost:3000'
      BACKEND_URL: 'https://127.0.0.1:8000'
      EMAIL_HOST_USER: 'skillswapcommunication@gmail.com'
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}   

      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for Postgres
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for Postgres..."
          sleep 1
        done

    - name: Debug Django setup
      working-directory: backend
      run: |
        python manage.py check
        python manage.py shell -c "
        import django.apps
        print('Installed apps:', [app.name for app in django.apps.apps.get_app_configs()])
        from django.conf import settings
        print('INSTALLED_APPS:', settings.INSTALLED_APPS)
        "

    - name: Setup database
      working-directory: backend
      run: |
        # Remove existing migrations but keep __init__.py
        find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
        find . -path "*/migrations/*.pyc" -delete
        # Create fresh migrations for this database setup
        python manage.py makemigrations api
        python manage.py makemigrations 
        python manage.py migrate

    - name: Run tests
      working-directory: backend
      run: |
        python manage.py test --keepdb --verbosity=2